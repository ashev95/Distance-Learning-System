<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/data/jpa
    http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
    http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd
    http://www.springframework.org/schema/task
    http://www.springframework.org/schema/task/spring-task.xsd">

    <!-- Для работы стартовой страницы "/" -->
    <context:component-scan base-package="com.dls.base" />

    <context:annotation-config />

    <!-- Путь к конфигу -->
    <bean id="appProperties" class = "org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name = "fileEncoding" value = "UTF-8" />
        <property name = "location" value = "classpath:app.properties" />
    </bean>

    <!-- Доступ к статическим ресурсам -->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>image/jpeg</value>
                        <value>image/png</value>
                        <value>image/gif</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <mvc:resources mapping="/resources/**" location="/resources/" />

    <!-- Каталог, где хранится стартовая и другие страницы -->
    <bean class = "org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name = "prefix" value = "/WEB-INF/jsp/" />
        <property name = "suffix" value = ".jsp" />
    </bean>

    <!-- JNDI -->
    <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="java:jboss/datasources/PostgreDS"/>
    </bean>

    <!-- Default configuration for Hibernate -->
    <bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>

    <!-- Configure the entity manager factory bean -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>
        <!-- JPA properties -->
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL9Dialect</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>
        <!-- Base package of your entities -->
        <property name="packagesToScan" value="com.dls.base.entity, com.dls.base.reports.container"/>
    </bean>

    <!-- Transaction manager bean -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!-- Enable annotation driven transaction management -->
    <tx:annotation-driven/>

    <!--
      Spring Data JPA and set the base package of the repository interfaces
    -->
    <jpa:repositories base-package="com.dls.base.repository"/>

    <!-- Spring Security -->
    <security:http auto-config="true">
        <security:intercept-url pattern="/" access="permitAll"/>
        <security:intercept-url pattern="/login" access="permitAll"/>
        <security:intercept-url pattern="/expired" access="permitAll"/>
        <security:intercept-url pattern="/dls" access="isAuthenticated()"/>
        <security:intercept-url pattern="/person/**" access="isAuthenticated()"/>
        <security:intercept-url pattern="/group/**" access="isAuthenticated()"/>
        <security:intercept-url pattern="/view/**" access="isAuthenticated()"/>
        <security:intercept-url pattern="/embedded_view/**" access="isAuthenticated()"/>
        <security:intercept-url pattern="/form/**" access="isAuthenticated()"/>
        <security:intercept-url pattern="/dialog/**" access="isAuthenticated()"/>
        <security:intercept-url pattern="/reports/**" access="isAuthenticated()"/>
        <security:intercept-url pattern="/upload/**" access="isAuthenticated()"/>

        <security:form-login
                login-page="/login"
                default-target-url="/dls"
                authentication-failure-url="/login"
                username-parameter="username"
                password-parameter="password"
                authentication-success-handler-ref="loginSuccessHandler"/>
        <security:logout logout-url="/logout" logout-success-url="/login" delete-cookies="JSESSIONID" />
        <security:csrf disabled="true"/>
        <security:session-management>
            <security:concurrency-control max-sessions="1" expired-url="/expired" />
        </security:session-management>
        <security:remember-me key="SomePrivateToken" authentication-success-handler-ref="loginSuccessHandler"/>
    </security:http>
    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider ref="daoAuthenticationProvider" />
    </security:authentication-manager>
    <bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <property name="userDetailsService" ref="personDetailsServiceImpl" />
        <property name="hideUserNotFoundExceptions" value="false" />
        <property name="passwordEncoder" ref="encoder" />
    </bean>
    <bean id="personDetailsServiceImpl" class="com.dls.base.service.PersonDetailsServiceImpl"></bean>
    <bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
        <constructor-arg name="strength" value="11"/>
    </bean>

    <!-- Spring Validator -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basenames" value="classpath:validation" />
        <property name="defaultEncoding" value="UTF-8" />
    </bean>
    <bean id ="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>

    <!-- Spring Singleton Utils -->
    <bean id="utils" class="com.dls.base.utils.Utils"/>
    <bean id="moveUtils" class="com.dls.base.utils.MoveUtils"/>
    <bean id="accessUtils" class="com.dls.base.utils.AccessUtils"/>
    <bean id="reportGenerator" class="com.dls.base.reports.ReportGenerator"/>

    <!-- File Uploader -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="10485760"/>
        <property name="maxUploadSizePerFile" value="10485760"/>
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>

    <!-- Scheduler -->
    <task:scheduler id="checkTestTimeLimit" pool-size="1"/>
    <task:scheduled-tasks scheduler="checkTestTimeLimit">
        <task:scheduled ref="testServiceImpl" method="checkTestTimeLimitAll" fixed-delay="30000"/>
    </task:scheduled-tasks>

</beans>