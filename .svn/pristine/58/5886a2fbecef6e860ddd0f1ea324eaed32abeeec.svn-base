package com.dls.base.controller;

import com.dls.base.entity.Person;
import com.dls.base.entity.Role;
import com.dls.base.repository.RoleRepository;
import com.dls.base.ui.view.ViewEntity;
import com.dls.base.ui.view.ViewTemplate;
import com.dls.base.utils.Utils;
import com.fasterxml.jackson.dataformat.xml.XmlMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.io.Resource;
import org.springframework.core.io.ResourceLoader;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;

@RestController
@RequestMapping("dialog/role")
public class DialogRestController
{

	private final RoleRepository roleRepository;

	@Autowired
	private ResourceLoader resourceLoader;

	@Autowired
	Utils utils;

	@Autowired
	DialogRestController(RoleRepository roleRepository) {
		this.roleRepository = roleRepository;
	}

	@GetMapping(value = "/all", produces = MediaType.APPLICATION_JSON_VALUE + ";charset=UTF-8")
	public ViewTemplate getAll() {
		ViewTemplate viewTemplate = null;
		try {
			XmlMapper xmlMapper = new XmlMapper();
			final Resource fileResource = resourceLoader.getResource("/WEB-INF/dialog_config/role_all.xml");
			File file = fileResource.getFile();
			String xml = utils.inputStreamToString(new FileInputStream(file));
			viewTemplate = xmlMapper.readValue(xml, ViewTemplate.class);
			viewTemplate.data.items = new ArrayList<ViewEntity>();
			ViewEntity viewEntity;
			long i = 0;
			for (Role role : roleRepository.findAll()){
				viewEntity = new ViewEntity();
				viewEntity.id = ++i;
				viewEntity.name = role.getName();
				viewEntity.type = role.getClass().getSimpleName().toLowerCase();
				viewEntity.code = role.getCode();
				viewTemplate.data.items.add(viewEntity);
			}
		} catch (IOException e) {
			e.printStackTrace();
		}
		return viewTemplate;
	}
}